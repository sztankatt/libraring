from django.forms import ModelForm
from usr.models import Person, Class, Institution
from django import forms
from django.contrib.auth import forms as auth_forms
from django.contrib.auth.models import User
from django.utils.translation import ugettext, ugettext_lazy as _

class RegisterPersonForm(ModelForm):
	email = forms.EmailField(required=True, widget=forms.TextInput(attrs={'placeholder':'e-mail'}))
	first_name = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={'placeholder':'First name'}))
	last_name = forms.CharField(max_length=100, required=True, widget=forms.TextInput(attrs={'placeholder':'Last name'}))	
	
	class Meta:
		model = Person
		exclude = ('user','current_education', 'education', 'institution')
		widgets = {
			'person_type' : forms.RadioSelect(),
			'about': forms.Textarea(attrs={'placeholder': 'About Me'})
		}
		

class ClassForm(ModelForm):
	class Meta:
		model = Class
		widgets = {
			'start_year' : forms.TextInput(attrs={'placeholder':'Start year'}),
			'end_year' : forms.TextInput(attrs={'placeholder':'End year'})
		}

class InstitutionForm(forms.Form):
	institution = forms.ModelChoiceField(Institution.objects)
	
class UserCreationForm(auth_forms.UserCreationForm):
    error_messages = {
        'duplicate_username': _("A user with that username already exists."),
        'password_mismatch': _("The two password fields didn't match."),
    }
    username = forms.RegexField(label=_("Username"), max_length=30,
        regex=r'^[\w.@+-]+$',
        help_text=_("Required. 30 characters or fewer. Letters, digits and "
                      "@/./+/-/_ only."),
        error_messages={
            'invalid': _("This value may contain only letters, numbers and "
                         "@/./+/-/_ characters.")},
        widget=forms.TextInput(attrs={'placeholder':'Username'}))
    
    password1 = forms.CharField(label=_("Password"),
        widget=forms.PasswordInput(attrs={'placeholder':'Password'}))
    password2 = forms.CharField(label=_("Password confirmation"),
        widget=forms.PasswordInput(attrs={'placeholder':'Confirm password'}),
        help_text=_("Enter the same password as above, for verification."))

    class Meta:
        model = User
        fields = ("username",)
